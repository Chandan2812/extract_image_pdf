import PDFObjectIndex from '../pdf-document/PDFObjectIndex';
import PDFObject from './PDFObject';
declare class PDFArray<T extends PDFObject = PDFObject> extends PDFObject {
    static fromArray: <A extends PDFObject>(array: A[], index: PDFObjectIndex) => PDFArray<A>;
    array: T[];
    index: PDFObjectIndex;
    constructor(array: T[], index: PDFObjectIndex);
    push: (...val: T[]) => this;
    set: (idx: number, val: T) => this;
    get: (idx: number) => T;
    forEach: (fn: (value: T, index: number, array: T[]) => void) => void;
    map: <U>(fn: (value: T, index: number, array: T[]) => U) => U[];
    splice: (start: number, deleteCount?: number | undefined) => T[];
    clone: () => PDFArray<T>;
    toString: () => string;
    bytesSize: () => number;
    copyBytesInto: (buffer: Uint8Array) => Uint8Array;
}
export default PDFArray;
